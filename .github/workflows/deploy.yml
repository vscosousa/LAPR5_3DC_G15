name: .NET CI

permissions:
  contents: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
        dotnet-quality: 'ga'

    - name: Setup JDK 21
      uses: actions/setup-java@v4
      with:
          java-version: '21'
          distribution: 'temurin'
    
    - name: Install xvfb
      run: sudo apt-get update && sudo apt-get install -y xvfb
        
    - name: Set execute permissions on build scripts
      run: chmod +x tools/SMTP/run-fake-smtp.sh || true
        
    - name: Run Fake SMTP server in background
      run: xvfb-run --auto-servernum --server-args='-screen 0 1024x768x24' java -jar libs/fakeSMTP-2.0.jar -s -m &

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run tests and generate coverage report
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.3.11
      with:
        reports: './TestResults/**/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline;Cobertura;MarkdownSummaryGithub'
        sourcedirs: ''
        historydir: ''
        plugins: ''
        assemblyfilters: '+*'
        classfilters: '+*'
        filefilters: '+*'
        riskhotspotassemblyfilters: '+*'
        riskhotspotclassfilters: '+*'
        verbosity: 'Info'
        title: ''
        tag: '${{ github.run_number }}_${{ github.run_id }}'
        license: ''
        customSettings: ''
        toolpath: 'reportgeneratortool'

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport
        path: coveragereport

    - name: Add comment to PR
      if: github.event_name == 'pull_request'
      run: gh pr comment ${{ github.event.pull_request.number }} --body-file coveragereport/SummaryGithub.md
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish coverage in build summary
      run: cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
      shell: bash