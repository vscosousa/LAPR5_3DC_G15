@startuml level_3_FE

title Level 3 FE Diagram

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #UIF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

actor Doctor as A
participant View as UI
participant "AllergiesAndMedicalConditionsManagerComponent" as AMC
participant "UpdateMedicalConditionComponent" as UAC
participant "OperationRequestService" as ORS
participant "MedicalConditionService" as AS
participant "AuthInterceptor" as AI
participant MDV as MDV

activate A
A -> UI: Asks to update a MedicalCondition
activate UI
UI -> AMC: routerLink='/update-MedicalCondition/:id'
activate AMC
AMC -> UAC: routes to UpdateMedicalConditionComponent
activate UAC
deactivate AMC
UAC -> AS: fetchMedicalCondition(id)
activate AS
AS -> AI: Makes Http Request to get Medical Condition data
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDV
    can authenticate and authorize the request.
end note
AI -> MDV: getMedicalConditionData(id)
activate MDV
MDV -> MDV: Fetches Medical Condition data
MDV --> AI: returns Operation Status Code
deactivate MDV
AI --> AS: returns Operation Status Code
deactivate AI
AS --> UAC: returns Operation Response
deactivate AS
UAC -> UAC: initializes UpdateMedicalConditionComponent
UAC --> UI: returns UpdateMedicalConditionComponent
deactivate UAC
UI --> A: Displays the fetched data and asks for the new Medical Condition's data
deactivate UI
A -> UI: Sends Medical Condition's data (MedicalConditionCode, MedicalConditionName, MedicalConditionDescription, MedicalConditionSymptoms)
activate UI
UI -> UAC: updateMedicalCondition($event)
activate UAC
UAC -> AS: updateMedicalCondition(newMedicalCondition)
activate AS
AS -> AI: Makes Http Request to update an MedicalCondition
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDV
    can authenticate and authorize the request.
end note
AI -> MDV: updateMedicalCondition(newMedicalCondition)
activate MDV
MDV -> MDV: Validates Medical Condition's data and updates it
MDV --> AI: Returns Operation Status Code
deactivate MDV
AI --> AS: returns Operation Status Code
deactivate AI
AS --> UAC: returns Operation Response
deactivate AS
UAC --> UI: returns Operation In/Sucess message
deactivate UAC
UI --> A: returns Operation In/Sucess message
deactivate UI

@enduml