@startuml domain-model-level-3

title DOMAIN MODEL - DDD

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

package "<<aggregate>> User" {

    entity User <<entity>> <<root>> {}

    class Username <<valueObject>> <<(V, #FF8B40)>> {}
    class Role <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> Patient" {

    entity Patient <<entity>> <<root>> {}

    class DateOfBirth <<valueObject>> <<(V, #FF8B40)>> {}
    class Gender <<valueObject>> <<(V, #FF8B40)>> {}
    class MedicalRecordNumber <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> Staff" {

    entity Staff <<entity>> <<root>> {}

    class LicenseNumber <<valueObject>> <<(V, #FF8B40)>> {}
    class AvailabilititySlots <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> Specialization" {

    entity Specialization <<entity>> <<root>> {}

    class SpecializationID <<valueObject>> <<(V, #FF8B40)>> {}
    class Designation <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> OperationRequest" {

    entity OperationRequest <<entity>> <<root>> {}

    class OperationRequestID <<valueObject>> <<(V, #FF8B40)>> {}
    class DeadlineDate <<valueObject>> <<(V, #FF8B40)>> {}
    class Priority <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> OperationType" {

    entity OperationType <<entity>> <<root>>{}

    class OperationTypeID <<valueObject>> <<(V, #FF8B40)>> {}
    class OperationName <<valueObject>> <<(V, #FF8B40)>> {}
    class EstimatedDuration <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> Appointment" {

    entity Appointment <<Entity>> <<root>> {}

    class AppointmentID <<valueObject>> <<(V, #FF8B40)>> {}
    class DateAndTime <<valueObject>> <<(V, #FF8B40)>> {}
    class Status <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> SurgeryRoom" {

    entity SurgeryRoom <<Entity>> <<root>> {}

    class RoomNumber <<valueObject>> <<(V, #FF8B40)>> {}
    class Type <<valueObject>> <<(V, #FF8B40)>> {}
    class Capacity <<valueObject>> <<(V, #FF8B40)>> {}
    class AssignedEquipment <<valueObject>> <<(V, #FF8B40)>> {}
    class CurrentStatus <<valueObject>> <<(V, #FF8B40)>> {}
    class MaintenanceSlots <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> MedicalHistory" {

    entity MedicalHistory <<Entity>> <<root>> {}

    class FamilyHistory <<valueObject>> <<(V, #FF8B40)>> {}
    class FreeText <<valueObject>> <<(V, #FF8B40)>> {}

}

package "<<aggregate>> Allergies" {

    entity Allergies <<Entity>> <<root>> {}

}

package "<<aggregate>> MedicalConditions" {

    entity MedicalConditions <<Entity>> <<root>> {}

}

class Code <<valueObject>> <<(V, #FF8B40)>> {}
class Name <<valueObject>> <<(V, #FF8B40)>> {}
class Description <<valueObject>> <<(V, #FF8B40)>> {}
class Symptoms <<valueObject>> <<(V, #FF8B40)>> {}


/' -------------------------Patient and Staff------------------------------ '/

class FirstName <<valueObject>> <<(V, #FF8B40)>> {}
class LastName <<valueObject>> <<(V, #FF8B40)>> {}
class FullName <<valueObject>> <<(V, #FF8B40)>> {}
/'user uses email too '/
class Email <<valueObject>> <<(V, #FF8B40)>> {}
class PhoneNumber <<valueObject>> <<(V, #FF8B40)>> {}

User "1" -right-> "1" Patient : can be
User "1" -left-> "1" Staff : can be
User "1" --> "1" Username : has
User "1" --> "1" Role : has
User "1" --> "1" Email : has

Patient "1" --> "1" DateOfBirth : has
Patient "1" --> "1" Gender : has
Patient "1" --> "1" MedicalRecordNumber : has
Patient "1" -up-> "1" FirstName : has
Patient "1" -up-> "1" LastName : has
Patient "1" -up-> "1" FullName : has
Patient "1" --> "1" Email : has
Patient "1" -up-> "1" PhoneNumber : has
Patient "1" --> "1" MedicalHistory : has

Staff "1" --> "1" Specialization : has
Staff "1" --> "*" OperationRequest : if doctor then it manages
Staff "1" --> "*" MedicalHistory : if doctor then it manages
Staff "1" --> "1" LicenseNumber : has
Staff "1" --> "*" AvailabilititySlots : has
Staff "1" --> "1" FirstName : has
Staff "1" --> "1" LastName : has
Staff "1" --> "1" FullName : has
Staff "1" --> "1" Email : has
Staff "1" --> "1" PhoneNumber : has

Specialization "1" --> "1" SpecializationID : has
Specialization "1" --> "1" Designation : has

OperationRequest "1" --> "1" OperationType : has
OperationRequest "1" --> "1" Patient : has
OperationRequest "1" --> "1" OperationRequestID : has
OperationRequest "1" --> "1" DeadlineDate : has
OperationRequest "1" --> "1" Priority : has


OperationType "1" --> "*" Specialization : has
OperationType "1" --> "1" OperationTypeID : has
OperationType "1" --> "1" OperationName : has
OperationType "1" --> "1" EstimatedDuration : has

Appointment "1" --> "1" OperationRequest : has
Appointment "1" --> "1" SurgeryRoom : has
Appointment "1" --> "1" AppointmentID : has
Appointment "1" --> "1" DateAndTime : has
Appointment "1" --> "1" Status : has

SurgeryRoom "1" --> "1" RoomNumber : has
SurgeryRoom "1" --> "1" Type : has
SurgeryRoom "1" --> "1" Capacity : has
SurgeryRoom "1" --> "*" AssignedEquipment
SurgeryRoom "1" --> "1" CurrentStatus : has
SurgeryRoom "1" --> "*" MaintenanceSlots : has

MedicalHistory "1" -down-> "*" Allergies : has
MedicalHistory "1" -down-> "*" MedicalConditions : has
MedicalHistory "1" --> "*" FamilyHistory : has
MedicalHistory "1" --> "*" FreeText : has

Allergies "1" --> "1" Code : has
Allergies "1" --> "1" Name : has
Allergies "1" --> "1" Description : has
Allergies "1" --> "*" Symptoms : has

MedicalConditions "1" -up-> "1" Code : has
MedicalConditions "1" -up-> "1" Name : has
MedicalConditions "1" -up-> "1" Description : has
MedicalConditions "1" -up-> "*" Symptoms : has

@enduml