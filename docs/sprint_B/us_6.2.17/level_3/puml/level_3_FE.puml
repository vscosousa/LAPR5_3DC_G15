@startuml level_3_FE

title Level 3 FE Diagram for Listing/Search Operation Requests

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

actor Doctor as D
participant "View" as V
participant "PanelDoctorComponent" as PDC
participant "ManageOperationrequestsComponent" as MORC
participant "OperationRequestService" as ORS
participant "AuthInterceptor" as AI
participant "MDR" as MDR

activate D
D -> V: Asks to list/search operation requests
activate V
V -> PDC: routerLink="/manage-operation-requests"
activate PDC
PDC -> MORC: routes to ManageOperationRequestsComponent
activate MORC
deactivate PDC
MORC -> ORS: getOperationRequestsWithFilters()
activate ORS
ORS -> AI: Sends HTTP request to list the default operation requests
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDR
    can authenticate and authorize the request.
end note
AI -> MDR: Sends HTTP request with the token to list the default operation requests
activate MDR
MDR -> MDR: Validates the data and tries to list the operation requests
MDR --> AI: Returns Operation Status Code
deactivate MDR
AI --> ORS: Returns Operation Status Code
deactivate AI
ORS --> MORC: Returns Operation Response
deactivate ORS
MORC --> V: Returns ManageOperationRequestsComponent
deactivate MORC
V --> D: Displays initial list and asks for the data to filter the requests
deactivate V
D -> V: Sends the data to filter the requests
note right of V: The data can be operationType,\ndeadlineDate or priority.
activate V
V -> MORC: applyFilters($event)
activate MORC
MORC -> ORS: getOperationRequestsWithFilters(filters)
activate ORS
ORS -> AI: Sends HTTP request to list the operation requests with filters
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDR
    can authenticate and authorize the request.
end note
AI -> MDR: Sends HTTP request with the token to list the operation requests with filters
activate MDR
MDR -> MDR: Validates the data and tries to list the operation requests
MDR --> AI: Returns Operation Status Code
deactivate MDR
AI --> ORS: Returns Operation Status Code
deactivate AI
ORS --> MORC: Returns Operation Response
deactivate ORS
MORC --> V: Returns In/Success message
deactivate MORC
V --> D: Returns In/Success message
deactivate V

@enduml