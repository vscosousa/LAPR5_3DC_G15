@startuml level_3_FE

title Level 3 FE Diagram

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}
actor Admin as A
participant "View" as V
participant "PanelAdminComponent" as PAC
participant "ManagePatientsComponent" as MP
participant "PatientService" as PS
participant "AuthInterceptor" as AI
participant "MDR" as MDR

activate A
A -> V: Asks to list patients
activate V
V -> PAC: routerLink="/manage-patients"
activate PAC
PAC -> MP: routes to ManagePatientsComponent
activate MP
deactivate PAC
MP -> PS: getPatientsWithAdvancedFilter()
activate PS
PS -> AI: Sends HTTP request to list the default patient's list
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDR
    can authenticate and authorize the request.
end note
AI -> MDR: Sends HTTP request with the token to list the default patient's list
activate MDR
MDR -> MDR: Validates the data and tries to list the patients
MDR --> AI: Returns Operation Status Code
deactivate MDR
AI --> PS: Returns Operation Status Code
deactivate AI
PS --> MP: Returns Operation Response
deactivate PS
MP --> V: Returns ManagePatientsComponent
deactivate MP
V --> A: Displays initial list and asks for the data to filter the patients
deactivate V
A -> V: Sends the data to filter the patients
note right of V: The data can be First Name and/or Last Name and/or Full Name\nand/or Date of Birth and/or Gender and/or Medical Record Number\nand/or Email and/or Phone Number
activate V
V -> MP: applyFilters($event)
activate MP
MP -> PS: getPatientsWithAdvancedFilter(filters)
activate PS
PS -> AI: Sends HTTP request to list the patients with filters
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDR
    can authenticate and authorize the request.
end note
AI -> MDR: Sends HTTP request with the token to list the patients with filters
activate MDR
MDR -> MDR: Validates the data and tries to list the patients
MDR --> AI: Returns Operation Status Code
deactivate MDR
AI --> PS: Returns Operation Status Code
deactivate AI
PS --> MP: Returns Operation Response
deactivate PS
MP --> V: Returns In/Sucess message
deactivate MP
V --> A: Returns In/Sucess message
deactivate V

@enduml