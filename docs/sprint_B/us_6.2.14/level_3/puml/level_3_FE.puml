@startuml level_3_FE

title Level 3 FE Diagram

hide empty members

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

actor Doctor as D
participant "View" as V
participant "OperationRequestComponent" as ORC
participant "CreateOperationRequestComponent" as CORC
participant "OperationRequestService" as ORS
participant "AuthInterceptor" as AI
participant "MDR" as MDR

activate D
D -> V: Requests to create an operation request
activate V
V -> ORC: routerLink='/create-operation-request'
activate ORC
ORC -> CORC: routes to CreateOperationRequestComponent
deactivate ORC
activate CORC
CORC -> CORC: initializes CreateOperationRequestComponent
CORC --> V: returns CreateOperationRequestComponent
deactivate CORC
V --> D: Asks for operation request's data
deactivate V
D -> V: Sends operation request data (patientID, operationType, deadlineDate, priority)
activate V
V -> CORC: createOperationRequest($event)
activate CORC
CORC -> ORS: createOperationRequest(this.operationRequest)
activate ORS
ORS -> AI: Sends HTTP Request to create an operation request with operation request's data
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDR
    can authenticate and authorize the request.
end note
AI -> MDR: Sends HTTP Request with token to create an operation request
activate MDR
MDR -> MDR: Validates operation request's data and tries to create the operation request
MDR --> AI: Returns Operation Status Code
deactivate MDR
AI --> ORS: Returns Operation Status Code
deactivate AI
ORS --> CORC: Returns Operation Response
deactivate ORS
CORC --> V: Returns Operation Success message
deactivate CORC
V --> D: Returns Operation Success message
deactivate V

@enduml