@startuml level_3_FE

title Level 3 FE Diagram

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

actor Admin as A
participant "View" as V
participant "OperationTypesComponent" as MP
participant "UpdateOperationTypesComponent" as CP
participant "OperationTypeService" as PS
participant "AuthInterceptor" as AI
participant "MDR" as MDR

activate A
A -> V: Asks to update a operation type
activate V
V -> MP: routerLink='/update-operation-type'
activate MP
MP -> CP: routes to UpdateOperationTypesComponent
deactivate MP
activate CP
CP -> CP: initializes UpdateOperationTypesComponent
CP --> V: returns UpdateOperationTypesComponent
deactivate CP
V --> A: Asks for operation type's data
deactivate V
A -> V: Sends operation type's data
note right of V: The data can be name, estimatedDuration, specializations
activate V
V -> CP: updateOperationType($event)
activate CP
CP -> CP: extractOperationTypeName()
CP -> PS: updateOperationType(name, dto)
activate PS
PS -> AI: Sends HTTP Request to update operation type's data with the new data
activate AI
AI -> AI: Intercepts the request and adds the token to the header
note right of AI
    The token is added to the header so that the MDR
    can authenticate and authorize the request.
end note
AI -> MDR: updateOperationType(name, dto)
activate MDR
MDR -> MDR: Validates operation type's data and tries to update operation type's data
MDR --> AI: Returns Operation Status Code
deactivate MDR
AI --> PS: Returns Operation Status Code
deactivate AI
PS --> CP: Returns Operation Response
deactivate PS
CP --> V: Returns Operation In/Sucess message
deactivate CP
V --> A: Returns Operation In/Sucess message
deactivate V

@enduml