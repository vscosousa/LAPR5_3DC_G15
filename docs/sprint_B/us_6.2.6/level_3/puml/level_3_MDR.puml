@startuml level_3_MDR

title Level 3 MDR Diagram

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

actor FE as FE
participant "PatientController" as C
participant "PatientService" as S
participant "PatientMapper" as M
participant "PatientRepository" as R
participant "Patient" as P
participant "PatientDTO" as DTO
participant "MedicalRecordNumberGenerator" as MRNG
participant "Database" as DB

activate FE
FE -> C: Sends HTTP Request to create a Patient with Patient's data
activate C
C --> S: createPatient(CreatingPatientDTO dto)
activate S
S -> M: ToDomain(CreatingPatientDTO dto)
activate M
M -> P: new Patient(dto.FirstName, dto.LastName, dto.FullName, \nDateOnly.Parse(dto.DateOfBirth), \ndto.GenderOptions, dto.Email, dto.PhoneNumber, \ndto.EmergencyContact, dto.MedicalConditions)
activate P
P -> P: Patient()
deactivate P
M --> S: return Patient
deactivate M
S -> R: getPatientByEmail(patient.Email)
activate R
R -> DB: _objs.Where(x => email.Equals(x.Email)).FirstOrDefaultAsync();
activate DB
DB --> R: return var
deactivate DB
R --> S: return var
deactivate R
alt var is null
    S -> R: getPatientByPhoneNumber(patient.PhoneNumber)
    activate R
    R -> DB: _objs.Where(x => phoneNumber.Equals(x.PhoneNumber)).FirstOrDefaultAsync();
    activate DB
    DB --> R: return var
    deactivate DB
    R --> S: return var
    deactivate R
    alt var is null
        S -> R: getAllAsync()
        activate R
        R -> DB: _objs.ToListAsync();
        activate DB
        DB --> R: return list
        deactivate DB
        R --> S: return list
        deactivate R
        S -> MRNG: GenerateMedicalRecordNumber(list.Count)
        activate MRNG
        MRNG --> S: return generatedMedicalRecordNumber
        deactivate MRNG
        S -> P: AssignMedicalRecordNumber(generatedMedicalRecordNumber)
        activate P
        P -> P: MedicalRecordNumber = genereatedMedicalRecordNumber
        deactivate P
        S -> R: addAsync(Patient patient)
        activate R
        R -> DB: _objs.AddAsync(patient)
        activate DB
        deactivate DB
        R --> S: return Patient
        deactivate R
        S -> M: ToDTO(Patient patient)
        activate M
        M -> DTO: new PatientDTO(patient fields)
        activate DTO
        DTO -> DTO: PatientDTO()
        deactivate DTO
        M --> S: return PatientDTO
        deactivate M
        S --> C: return PatientDTO
        deactivate S
    else var is not null
        S --> C: return Patient with same Phone Number already exists
        deactivate S
    end
else var is not null
    S --> C: return Patient with same Email already exists
    deactivate S
end
C --> FE: Returns Operation Status Response Code
deactivate C


@enduml