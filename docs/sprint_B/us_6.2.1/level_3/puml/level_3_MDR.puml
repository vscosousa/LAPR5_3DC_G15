@startuml level_3_MDR

title Level 3 MDR Diagram

hide empty members
'skinparam Linetype ortho

skinparam class {
    BackgroundColor<<valueObject>> #D6EAF8
    BackgroundColor<<root>> #FDEBD0
    BackgroundColor<<service>> #D1F2EB
    BackgroundColor #FEF9E7
    ArrowColor Black
}

skinparam package {
    BackgroundColor #EBF5FB
}

actor FE as FE
participant "UserController" as C
participant "UserService" as S
participant "EmailService" as ES
participant "UserMapper" as M
participant "UserRepository" as R
participant "PatientRepository" as PR
participant "User" as U
participant "UserDTO" as DTO
participant "Database" as DB

activate FE
FE -> C: Makes HTTP Request to Register User with data (email, phone number, password)
activate C
C -> S: createPatientUser(CreatingPatientUserDTO dto)
activate S
S -> R: getUserByEmailAsync(dto.Email())
activate R
R --> S: Returns var
deactivate R
alt var is null
    S -> PR: getUserByEmailAsync(dto.Email())
    activate PR
    PR --> S: Returns var
    deactivate PR
    alt Phone number matches the Patient's profile with the given email
        S -> M: ToCreatingPatientUser(dto)
        activate M
        M -> U: new User(dto fields)
        activate U
        U -> U: User()
        deactivate U
        M --> S: return User
        deactivate M
        S -> S: GenerateToken(user)
        S -> ES: sendEmail(SendEmail(dto.Email, "Activate your account", GenerateLink(token, "ActivatePatientUser")
        activate ES
        ES --> ES: Sends email using SMTP configuration
        deactivate ES
        S -> R: addAsync(user)
        activate R
        R -> DB: _objs.AddAsync(user)
        activate DB
        deactivate DB
        R --> S: return User
        deactivate R
        S --> C: return token
    else Phone number does not match the Patient's profile with the given email
        S -> C: return exception message
    end
else var is not null
    S -> C: return exception message
    deactivate S
end
C --> FE: Returns Operation Status Code
deactivate UI

@enduml